// Code generated by entc, DO NOT EDIT.

package embedfield

const (
	// Label holds the string label denoting the embedfield type in the database.
	Label = "embed_field"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldSubtitle holds the string denoting the subtitle field in the database.
	FieldSubtitle = "subtitle"
	// FieldBody holds the string denoting the body field in the database.
	FieldBody = "body"
	// FieldImageURL holds the string denoting the image_url field in the database.
	FieldImageURL = "image_url"
	// FieldPresentation holds the string denoting the presentation field in the database.
	FieldPresentation = "presentation"
	// EdgeEmbedAction holds the string denoting the embed_action edge name in mutations.
	EdgeEmbedAction = "embed_action"
	// EdgeEmbedMessage holds the string denoting the embed_message edge name in mutations.
	EdgeEmbedMessage = "embed_message"
	// Table holds the table name of the embedfield in the database.
	Table = "embed_fields"
	// EmbedActionTable is the table the holds the embed_action relation/edge.
	EmbedActionTable = "embed_actions"
	// EmbedActionInverseTable is the table name for the EmbedAction entity.
	// It exists in this package in order to avoid circular dependency with the "embedaction" package.
	EmbedActionInverseTable = "embed_actions"
	// EmbedActionColumn is the table column denoting the embed_action relation/edge.
	EmbedActionColumn = "embed_field_embed_action"
	// EmbedMessageTable is the table the holds the embed_message relation/edge.
	EmbedMessageTable = "embed_fields"
	// EmbedMessageInverseTable is the table name for the EmbedMessage entity.
	// It exists in this package in order to avoid circular dependency with the "embedmessage" package.
	EmbedMessageInverseTable = "embed_messages"
	// EmbedMessageColumn is the table column denoting the embed_message relation/edge.
	EmbedMessageColumn = "embed_message_embed_field"
)

// Columns holds all SQL columns for embedfield fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldSubtitle,
	FieldBody,
	FieldImageURL,
	FieldPresentation,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "embed_fields"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"embed_message_embed_field",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
