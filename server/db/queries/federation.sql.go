// Code generated by sqlc. DO NOT EDIT.
// source: federation.sql

package queries

import (
	"context"
)

const addNonce = `-- name: AddNonce :exec
INSERT INTO Federation_Nonces (Nonce, User_ID, Home_Server)
VALUES ($1, $2, $3)
`

type AddNonceParams struct {
	Nonce      string `json:"nonce"`
	UserID     uint64 `json:"user_id"`
	HomeServer string `json:"home_server"`
}

func (q *Queries) AddNonce(ctx context.Context, arg AddNonceParams) error {
	_, err := q.exec(ctx, q.addNonceStmt, addNonce, arg.Nonce, arg.UserID, arg.HomeServer)
	return err
}

const getNonceInfo = `-- name: GetNonceInfo :one
SELECT User_ID,
  Home_Server
FROM Federation_Nonces
WHERE Nonce = $1
`

type GetNonceInfoRow struct {
	UserID     uint64 `json:"user_id"`
	HomeServer string `json:"home_server"`
}

func (q *Queries) GetNonceInfo(ctx context.Context, nonce string) (GetNonceInfoRow, error) {
	row := q.queryRow(ctx, q.getNonceInfoStmt, getNonceInfo, nonce)
	var i GetNonceInfoRow
	err := row.Scan(&i.UserID, &i.HomeServer)
	return i, err
}
