// Code generated by entc, DO NOT EDIT.

package override

const (
	// Label holds the string label denoting the override type in the database.
	Label = "override"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUsername holds the string denoting the username field in the database.
	FieldUsername = "username"
	// FieldAvatar holds the string denoting the avatar field in the database.
	FieldAvatar = "avatar"
	// FieldReason holds the string denoting the reason field in the database.
	FieldReason = "reason"
	// EdgeMessage holds the string denoting the message edge name in mutations.
	EdgeMessage = "message"
	// Table holds the table name of the override in the database.
	Table = "overrides"
	// MessageTable is the table the holds the message relation/edge. The primary key declared below.
	MessageTable = "message_override"
	// MessageInverseTable is the table name for the Message entity.
	// It exists in this package in order to avoid circular dependency with the "message" package.
	MessageInverseTable = "messages"
)

// Columns holds all SQL columns for override fields.
var Columns = []string{
	FieldID,
	FieldUsername,
	FieldAvatar,
	FieldReason,
}

var (
	// MessagePrimaryKey and MessageColumn2 are the table columns denoting the
	// primary key for the message relation (M2M).
	MessagePrimaryKey = []string{"message_id", "override_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
