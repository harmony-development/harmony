// Code generated by sqlc. DO NOT EDIT.
// source: roles.sql

package queries

import (
	"context"

	"github.com/lib/pq"
)

const getGuildPerms = `-- name: GetGuildPerms :one
SELECT Permissions
    FROM Guilds
    WHERE Guild_ID = $1
`

func (q *Queries) GetGuildPerms(ctx context.Context, guildID uint64) ([]byte, error) {
	row := q.queryRow(ctx, q.getGuildPermsStmt, getGuildPerms, guildID)
	var permissions []byte
	err := row.Scan(&permissions)
	return permissions, err
}

const getGuildRoles = `-- name: GetGuildRoles :one
SELECT Roles
    FROM Guilds
    WHERE Guild_ID = $1
`

func (q *Queries) GetGuildRoles(ctx context.Context, guildID uint64) ([][]byte, error) {
	row := q.queryRow(ctx, q.getGuildRolesStmt, getGuildRoles, guildID)
	var roles [][]byte
	err := row.Scan(pq.Array(&roles))
	return roles, err
}

const setGuildPerms = `-- name: SetGuildPerms :exec
UPDATE Guilds
    SET Permissions = $1
    WHERE Guild_ID = $2
`

type SetGuildPermsParams struct {
	Permissions []byte `json:"permissions"`
	GuildID     uint64 `json:"guild_id"`
}

func (q *Queries) SetGuildPerms(ctx context.Context, arg SetGuildPermsParams) error {
	_, err := q.exec(ctx, q.setGuildPermsStmt, setGuildPerms, arg.Permissions, arg.GuildID)
	return err
}

const setGuildRoles = `-- name: SetGuildRoles :exec
UPDATE Guilds
    SET Roles = $1
    WHERE Guild_ID = $2
`

type SetGuildRolesParams struct {
	Roles   [][]byte `json:"roles"`
	GuildID uint64   `json:"guild_id"`
}

func (q *Queries) SetGuildRoles(ctx context.Context, arg SetGuildRolesParams) error {
	_, err := q.exec(ctx, q.setGuildRolesStmt, setGuildRoles, pq.Array(arg.Roles), arg.GuildID)
	return err
}
